// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Keypad should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Keypad
    callOperator={[Function]}
    numbers={Array []}
    operators={Array []}
    setOperator={[Function]}
    theme="default"
    toggleTheme={[Function]}
    updateDisplay={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="numbers-container"
>
          
</div>,
        <div
          className="operators-container"
>
          
</div>,
        <div
          className="submit-container"
>
          <Key
                    keyAction={[Function]}
                    keyType="submit-key"
                    keyValue="="
                    theme="default"
          />
          <StarKey
                    theme="default"
                    toggleTheme={[Function]}
          />
</div>,
      ],
      "className": "keypad-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "numbers-container",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "operators-container",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Key
              keyAction={[Function]}
              keyType="submit-key"
              keyValue="="
              theme="default"
/>,
            <StarKey
              theme="default"
              toggleTheme={[Function]}
/>,
          ],
          "className": "submit-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "keyAction": [Function],
              "keyType": "submit-key",
              "keyValue": "=",
              "theme": "default",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "theme": "default",
              "toggleTheme": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="numbers-container"
>
            
</div>,
          <div
            className="operators-container"
>
            
</div>,
          <div
            className="submit-container"
>
            <Key
                        keyAction={[Function]}
                        keyType="submit-key"
                        keyValue="="
                        theme="default"
            />
            <StarKey
                        theme="default"
                        toggleTheme={[Function]}
            />
</div>,
        ],
        "className": "keypad-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "numbers-container",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "operators-container",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Key
                keyAction={[Function]}
                keyType="submit-key"
                keyValue="="
                theme="default"
/>,
              <StarKey
                theme="default"
                toggleTheme={[Function]}
/>,
            ],
            "className": "submit-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "keyAction": [Function],
                "keyType": "submit-key",
                "keyValue": "=",
                "theme": "default",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "theme": "default",
                "toggleTheme": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
